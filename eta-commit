#!/usr/bin/bash

set -e
set -x

base_dir="$(pwd)"
os_dir="$work_dir"/os
repo_dir="$base_dir"/out/repo
conf_dir="$base_dir"/conf
out_dir="$base_dir"/out
work_dir="$base_dir"/work
conf_dir="$base_dir"/conf
ostree_dir="$out_dir"/ostree

die() {
    echo "$@"
    exit 1
}

(( EUID != 0 )) && die "This script must be run as root."

. "$conf_dir"/eta.conf

cp -f "$conf_dir"/pacman.conf "$work_dir"

echo -e "\n[$OSNAME]\nSigLevel = Never\nServer = file://$repo_dir" >> \
    "$work_dir"/pacman.conf

if [ ! -d "$os_dir" ]; then
    mkdir -p "$os_dir"/os
    pacstrap -dcC "$work_dir"/pacman.conf "$work_dir"/os $PKGS
else
    systemd-nspawn -D "$os_dir" pacman -Suy --needed $PKGS
fi

systemd-nspawn -D "$os_dir" \
    mkinitcpio -c /etc/ostree-mkinitcpio.conf -g /boot/initramfs-linux.img

mkdir -p "$os_dir"/sysroot
rm -f initramfs-linux-fallback.img

boot_dir="$os_dir"/boot

checksum=$(cat "$boot_dir"/initramfs-* "$boot_dir"/vmlinuz-* | \
           sha256sum | cut -d' ' -f 1)

mv "$boot_dir"/initramfs-*.img "$boot_dir"/initramfs-$checksum
mv "$boot_dir"/vmlinuz-* "$boot_dir"/vmlinuz-$checksum

if [ ! -d "$ostree_dir" ]; then
    ostree --repo="$ostree_dir" init
fi

ostree --repo="$ostree_dir" commit --tree=dir="$os_dir" --branch=master \
    --subject "Update"
